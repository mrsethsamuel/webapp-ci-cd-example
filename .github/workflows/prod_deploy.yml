# This workflow will build a docker container, publish it to Google Artifact Registry  and Deploy the Image to GKE

name: Build and Deploy to Production

on:
  pull_request:
    branches:
      - prod-deploy
    types: [closed]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID}}
  IMAGE_NAME: simple-python-app
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME}}
  GKE_CLUSTER_REGION: ${{ secrets.GKE_CLUSTER_REGION}}
  GKE_CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE}}
  DEPLOYMENT_NAME: simple-python-app-dev-deployment

jobs:
  build:
    name: Python CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9"]

    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./app/requirements.txt  
  
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
      
      - name: Run tests
        run: |
          python -m pytest

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: '>= 363.0.0'
          install_components: 'gke-gcloud-auth-plugin'

      - name: Build & Publish
        run: |-
            gcloud auth configure-docker ${GKE_CLUSTER_REGION}-docker.pkg.dev
            docker build \
            --tag "$GKE_CLUSTER_REGION-docker.pkg.dev/$PROJECT_ID/code-campus-class-repo/$IMAGE_NAME:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .
            docker push "$GKE_CLUSTER_REGION-docker.pkg.dev/$PROJECT_ID/code-campus-class-repo/$IMAGE_NAME:$GITHUB_SHA"


        # Get the GKE credentials so we can deploy to the cluster
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
            cluster_name: ${{ env.GKE_CLUSTER_NAME }}
            location: ${{ env.GKE_CLUSTER_ZONE}}

      - name: Deploy to GKE
        run: |
           gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --location=${GKE_CLUSTER_ZONE}
           sed -i "s|IMAGE_TAG|${GKE_CLUSTER_REGION}-docker.pkg.dev/${PROJECT_ID}/code-campus-class-repo/${IMAGE_NAME}:${GITHUB_SHA}|g" deployment/resources.yaml
           kubectl apply -f deployment/resources.yaml -n production